#ifndef HANDLE_LIBFUNC
#define HANDLE_LIBFUNC(name)
#endif
#ifndef HANDLE_SEP
#define HANDLE_SEP
#endif
#if HS_LLVM_VERSION >= 303
      /// int _IO_getc(_IO_FILE * __fp);
HANDLE_LIBFUNC(under_IO_getc)
HANDLE_SEP
      /// int _IO_putc(int __c, _IO_FILE * __fp);
HANDLE_LIBFUNC(under_IO_putc)
HANDLE_SEP
      /// void operator delete[](void*);
HANDLE_LIBFUNC(ZdaPv)
HANDLE_SEP
      /// void operator delete(void*);
HANDLE_LIBFUNC(ZdlPv)
HANDLE_SEP
      /// void *new[](unsigned int);
HANDLE_LIBFUNC(Znaj)
HANDLE_SEP
      /// void *new[](unsigned int, nothrow);
HANDLE_LIBFUNC(ZnajRKSt9nothrow_t)
HANDLE_SEP
      /// void *new[](unsigned long);
HANDLE_LIBFUNC(Znam)
HANDLE_SEP
      /// void *new[](unsigned long, nothrow);
HANDLE_LIBFUNC(ZnamRKSt9nothrow_t)
HANDLE_SEP
      /// void *new(unsigned int);
HANDLE_LIBFUNC(Znwj)
HANDLE_SEP
      /// void *new(unsigned int, nothrow);
HANDLE_LIBFUNC(ZnwjRKSt9nothrow_t)
HANDLE_SEP
      /// void *new(unsigned long);
HANDLE_LIBFUNC(Znwm)
HANDLE_SEP
      /// void *new(unsigned long, nothrow);
HANDLE_LIBFUNC(ZnwmRKSt9nothrow_t)
HANDLE_SEP
#endif
#if HS_LLVM_VERSION >= 301
      /// int __cxa_atexit(void (*f)(void *), void *p, void *d);
HANDLE_LIBFUNC(cxa_atexit)
HANDLE_SEP
      /// void __cxa_guard_abort(guard_t *guard);
      /// guard_t is int64_t in Itanium ABI or int32_t on ARM eabi.
HANDLE_LIBFUNC(cxa_guard_abort)
HANDLE_SEP
      /// int __cxa_guard_acquire(guard_t *guard);
HANDLE_LIBFUNC(cxa_guard_acquire)
HANDLE_SEP
      /// void __cxa_guard_release(guard_t *guard);
HANDLE_LIBFUNC(cxa_guard_release)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int __isoc99_scanf (const char *format, ...)
HANDLE_LIBFUNC(dunder_isoc99_scanf)
HANDLE_SEP
      /// int __isoc99_sscanf(const char *s, const char *format, ...)
HANDLE_LIBFUNC(dunder_isoc99_sscanf)
HANDLE_SEP
      /// void *__memcpy_chk(void *s1, const void *s2, size_t n, size_t s1size);
HANDLE_LIBFUNC(memcpy_chk)
HANDLE_SEP
      /// char * __strdup(const char *s);
HANDLE_LIBFUNC(dunder_strdup)
HANDLE_SEP
      /// char *__strndup(const char *s, size_t n);
HANDLE_LIBFUNC(dunder_strndup)
HANDLE_SEP
      /// char * __strtok_r(char *s, const char *delim, char **save_ptr);
HANDLE_LIBFUNC(dunder_strtok_r)
HANDLE_SEP
      /// int abs(int j);
HANDLE_LIBFUNC(abs)
HANDLE_SEP
      /// int access(const char *path, int amode);
HANDLE_LIBFUNC(access)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double acos(double x);
HANDLE_LIBFUNC(acos)
HANDLE_SEP
      /// float acosf(float x);
HANDLE_LIBFUNC(acosf)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// double acosh(double x);
HANDLE_LIBFUNC(acosh)
HANDLE_SEP
      /// float acoshf(float x);
HANDLE_LIBFUNC(acoshf)
HANDLE_SEP
      /// long double acoshl(long double x);
HANDLE_LIBFUNC(acoshl)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// long double acosl(long double x);
HANDLE_LIBFUNC(acosl)
HANDLE_SEP
      /// double asin(double x);
HANDLE_LIBFUNC(asin)
HANDLE_SEP
      /// float asinf(float x);
HANDLE_LIBFUNC(asinf)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// double asinh(double x);
HANDLE_LIBFUNC(asinh)
HANDLE_SEP
      /// float asinhf(float x);
HANDLE_LIBFUNC(asinhf)
HANDLE_SEP
      /// long double asinhl(long double x);
HANDLE_LIBFUNC(asinhl)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// long double asinl(long double x);
HANDLE_LIBFUNC(asinl)
HANDLE_SEP
      /// double atan(double x);
HANDLE_LIBFUNC(atan)
HANDLE_SEP
      /// double atan2(double y, double x);
HANDLE_LIBFUNC(atan2)
HANDLE_SEP
      /// float atan2f(float y, float x);
HANDLE_LIBFUNC(atan2f)
HANDLE_SEP
      /// long double atan2l(long double y, long double x);
HANDLE_LIBFUNC(atan2l)
HANDLE_SEP
      /// float atanf(float x);
HANDLE_LIBFUNC(atanf)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// double atanh(double x);
HANDLE_LIBFUNC(atanh)
HANDLE_SEP
      /// float atanhf(float x);
HANDLE_LIBFUNC(atanhf)
HANDLE_SEP
      /// long double atanhl(long double x);
HANDLE_LIBFUNC(atanhl)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// long double atanl(long double x);
HANDLE_LIBFUNC(atanl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// double atof(const char *str);
HANDLE_LIBFUNC(atof)
HANDLE_SEP
      /// int atoi(const char *str);
HANDLE_LIBFUNC(atoi)
HANDLE_SEP
      /// long atol(const char *str);
HANDLE_LIBFUNC(atol)
HANDLE_SEP
      /// long long atoll(const char *nptr);
HANDLE_LIBFUNC(atoll)
HANDLE_SEP
      /// int bcmp(const void *s1, const void *s2, size_t n);
HANDLE_LIBFUNC(bcmp)
HANDLE_SEP
      /// void bcopy(const void *s1, void *s2, size_t n);
HANDLE_LIBFUNC(bcopy)
HANDLE_SEP
      /// void bzero(void *s, size_t n);
HANDLE_LIBFUNC(bzero)
HANDLE_SEP
      /// void *calloc(size_t count, size_t size);
HANDLE_LIBFUNC(calloc)
HANDLE_SEP
      /// double cbrt(double x);
HANDLE_LIBFUNC(cbrt)
HANDLE_SEP
      /// float cbrtf(float x);
HANDLE_LIBFUNC(cbrtf)
HANDLE_SEP
      /// long double cbrtl(long double x);
HANDLE_LIBFUNC(cbrtl)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double ceil(double x);
HANDLE_LIBFUNC(ceil)
HANDLE_SEP
      /// float ceilf(float x);
HANDLE_LIBFUNC(ceilf)
HANDLE_SEP
      /// long double ceill(long double x);
HANDLE_LIBFUNC(ceill)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int chmod(const char *path, mode_t mode);
HANDLE_LIBFUNC(chmod)
HANDLE_SEP
      /// int chown(const char *path, uid_t owner, gid_t group);
HANDLE_LIBFUNC(chown)
HANDLE_SEP
      /// void clearerr(FILE *stream);
HANDLE_LIBFUNC(clearerr)
HANDLE_SEP
      /// int closedir(DIR *dirp);
HANDLE_LIBFUNC(closedir)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double copysign(double x, double y);
HANDLE_LIBFUNC(copysign)
HANDLE_SEP
      /// float copysignf(float x, float y);
HANDLE_LIBFUNC(copysignf)
HANDLE_SEP
      /// long double copysignl(long double x, long double y);
HANDLE_LIBFUNC(copysignl)
HANDLE_SEP
      /// double cos(double x);
HANDLE_LIBFUNC(cos)
HANDLE_SEP
      /// float cosf(float x);
HANDLE_LIBFUNC(cosf)
HANDLE_SEP
      /// double cosh(double x);
HANDLE_LIBFUNC(cosh)
HANDLE_SEP
      /// float coshf(float x);
HANDLE_LIBFUNC(coshf)
HANDLE_SEP
      /// long double coshl(long double x);
HANDLE_LIBFUNC(coshl)
HANDLE_SEP
      /// long double cosl(long double x);
HANDLE_LIBFUNC(cosl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// char *ctermid(char *s);
HANDLE_LIBFUNC(ctermid)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double exp(double x);
HANDLE_LIBFUNC(exp)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// double exp10(double x);
HANDLE_LIBFUNC(exp10)
HANDLE_SEP
      /// float exp10f(float x);
HANDLE_LIBFUNC(exp10f)
HANDLE_SEP
      /// long double exp10l(long double x);
HANDLE_LIBFUNC(exp10l)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double exp2(double x);
HANDLE_LIBFUNC(exp2)
HANDLE_SEP
      /// float exp2f(float x);
HANDLE_LIBFUNC(exp2f)
HANDLE_SEP
      /// long double exp2l(long double x);
HANDLE_LIBFUNC(exp2l)
HANDLE_SEP
      /// float expf(float x);
HANDLE_LIBFUNC(expf)
HANDLE_SEP
      /// long double expl(long double x);
HANDLE_LIBFUNC(expl)
HANDLE_SEP
      /// double expm1(double x);
HANDLE_LIBFUNC(expm1)
HANDLE_SEP
      /// float expm1f(float x);
HANDLE_LIBFUNC(expm1f)
HANDLE_SEP
      /// long double expm1l(long double x);
HANDLE_LIBFUNC(expm1l)
HANDLE_SEP
      /// double fabs(double x);
HANDLE_LIBFUNC(fabs)
HANDLE_SEP
      /// float fabsf(float x);
HANDLE_LIBFUNC(fabsf)
HANDLE_SEP
      /// long double fabsl(long double x);
HANDLE_LIBFUNC(fabsl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int fclose(FILE *stream);
HANDLE_LIBFUNC(fclose)
HANDLE_SEP
      /// FILE *fdopen(int fildes, const char *mode);
HANDLE_LIBFUNC(fdopen)
HANDLE_SEP
      /// int feof(FILE *stream);
HANDLE_LIBFUNC(feof)
HANDLE_SEP
      /// int ferror(FILE *stream);
HANDLE_LIBFUNC(ferror)
HANDLE_SEP
      /// int fflush(FILE *stream);
HANDLE_LIBFUNC(fflush)
HANDLE_SEP
      /// int ffs(int i);
HANDLE_LIBFUNC(ffs)
HANDLE_SEP
      /// int ffsl(long int i);
HANDLE_LIBFUNC(ffsl)
HANDLE_SEP
      /// int ffsll(long long int i);
HANDLE_LIBFUNC(ffsll)
HANDLE_SEP
      /// int fgetc(FILE *stream);
HANDLE_LIBFUNC(fgetc)
HANDLE_SEP
      /// int fgetpos(FILE *stream, fpos_t *pos);
HANDLE_LIBFUNC(fgetpos)
HANDLE_SEP
      /// char *fgets(char *s, int n, FILE *stream);
HANDLE_LIBFUNC(fgets)
HANDLE_SEP
      /// int fileno(FILE *stream);
HANDLE_LIBFUNC(fileno)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
#endif
      /// int fiprintf(FILE *stream, const char *format, ...);
HANDLE_LIBFUNC(fiprintf)
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// void flockfile(FILE *file);
HANDLE_LIBFUNC(flockfile)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double floor(double x);
HANDLE_LIBFUNC(floor)
HANDLE_SEP
      /// float floorf(float x);
HANDLE_LIBFUNC(floorf)
HANDLE_SEP
      /// long double floorl(long double x);
HANDLE_LIBFUNC(floorl)
HANDLE_SEP
      /// double fmod(double x, double y);
HANDLE_LIBFUNC(fmod)
HANDLE_SEP
      /// float fmodf(float x, float y);
HANDLE_LIBFUNC(fmodf)
HANDLE_SEP
      /// long double fmodl(long double x, long double y);
HANDLE_LIBFUNC(fmodl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// FILE *fopen(const char *filename, const char *mode);
HANDLE_LIBFUNC(fopen)
HANDLE_SEP
      /// FILE *fopen64(const char *filename, const char *opentype)
HANDLE_LIBFUNC(fopen64)
HANDLE_SEP
      /// int fprintf(FILE *stream, const char *format, ...);
HANDLE_LIBFUNC(fprintf)
HANDLE_SEP
      /// int fputc(int c, FILE *stream);
HANDLE_LIBFUNC(fputc)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// int fputs(const char *s, FILE *stream);
HANDLE_LIBFUNC(fputs)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// size_t fread(void *ptr, size_t size, size_t nitems, FILE *stream);
HANDLE_LIBFUNC(fread)
HANDLE_SEP
      /// void free(void *ptr);
HANDLE_LIBFUNC(free)
HANDLE_SEP
      /// double frexp(double num, int *exp);
HANDLE_LIBFUNC(frexp)
HANDLE_SEP
      /// float frexpf(float num, int *exp);
HANDLE_LIBFUNC(frexpf)
HANDLE_SEP
      /// long double frexpl(long double num, int *exp);
HANDLE_LIBFUNC(frexpl)
HANDLE_SEP
      /// int fscanf(FILE *stream, const char *format, ... );
HANDLE_LIBFUNC(fscanf)
HANDLE_SEP
      /// int fseek(FILE *stream, long offset, int whence);
HANDLE_LIBFUNC(fseek)
HANDLE_SEP
      /// int fseeko(FILE *stream, off_t offset, int whence);
HANDLE_LIBFUNC(fseeko)
HANDLE_SEP
      /// int fseeko64(FILE *stream, off64_t offset, int whence)
HANDLE_LIBFUNC(fseeko64)
HANDLE_SEP
      /// int fsetpos(FILE *stream, const fpos_t *pos);
HANDLE_LIBFUNC(fsetpos)
HANDLE_SEP
      /// int fstat(int fildes, struct stat *buf);
HANDLE_LIBFUNC(fstat)
HANDLE_SEP
      /// int fstat64(int filedes, struct stat64 *buf)
HANDLE_LIBFUNC(fstat64)
HANDLE_SEP
      /// int fstatvfs(int fildes, struct statvfs *buf);
HANDLE_LIBFUNC(fstatvfs)
HANDLE_SEP
      /// int fstatvfs64(int fildes, struct statvfs64 *buf);
HANDLE_LIBFUNC(fstatvfs64)
HANDLE_SEP
      /// long ftell(FILE *stream);
HANDLE_LIBFUNC(ftell)
HANDLE_SEP
      /// off_t ftello(FILE *stream);
HANDLE_LIBFUNC(ftello)
HANDLE_SEP
      /// off64_t ftello64(FILE *stream)
HANDLE_LIBFUNC(ftello64)
HANDLE_SEP
      /// int ftrylockfile(FILE *file);
HANDLE_LIBFUNC(ftrylockfile)
HANDLE_SEP
      /// void funlockfile(FILE *file);
HANDLE_LIBFUNC(funlockfile)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// size_t fwrite(const void *ptr, size_t size, size_t nitems,
      /// FILE *stream);
HANDLE_LIBFUNC(fwrite)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int getc(FILE *stream);
HANDLE_LIBFUNC(getc)
HANDLE_SEP
      /// int getc_unlocked(FILE *stream);
HANDLE_LIBFUNC(getc_unlocked)
HANDLE_SEP
      /// int getchar(void);
HANDLE_LIBFUNC(getchar)
HANDLE_SEP
      /// char *getenv(const char *name);
HANDLE_LIBFUNC(getenv)
HANDLE_SEP
      /// int getitimer(int which, struct itimerval *value);
HANDLE_LIBFUNC(getitimer)
HANDLE_SEP
      /// int getlogin_r(char *name, size_t namesize);
HANDLE_LIBFUNC(getlogin_r)
HANDLE_SEP
      /// struct passwd *getpwnam(const char *name);
HANDLE_LIBFUNC(getpwnam)
HANDLE_SEP
      /// char *gets(char *s);
HANDLE_LIBFUNC(gets)
HANDLE_SEP
      /// uint32_t htonl(uint32_t hostlong);
HANDLE_LIBFUNC(htonl)
HANDLE_SEP
      /// uint16_t htons(uint16_t hostshort);
HANDLE_LIBFUNC(htons)
#endif
HANDLE_SEP
      /// int iprintf(const char *format, ...);
HANDLE_LIBFUNC(iprintf)
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int isascii(int c);
HANDLE_LIBFUNC(isascii)
HANDLE_SEP
      /// int isdigit(int c);
HANDLE_LIBFUNC(isdigit)
HANDLE_SEP
      /// long int labs(long int j);
HANDLE_LIBFUNC(labs)
HANDLE_SEP
      /// int lchown(const char *path, uid_t owner, gid_t group);
HANDLE_LIBFUNC(lchown)
HANDLE_SEP
      /// long long int llabs(long long int j);
HANDLE_LIBFUNC(llabs)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double log(double x);
HANDLE_LIBFUNC(log)
HANDLE_SEP
      /// double log10(double x);
HANDLE_LIBFUNC(log10)
HANDLE_SEP
      /// float log10f(float x);
HANDLE_LIBFUNC(log10f)
HANDLE_SEP
      /// long double log10l(long double x);
HANDLE_LIBFUNC(log10l)
HANDLE_SEP
      /// double log1p(double x);
HANDLE_LIBFUNC(log1p)
HANDLE_SEP
      /// float log1pf(float x);
HANDLE_LIBFUNC(log1pf)
HANDLE_SEP
      /// long double log1pl(long double x);
HANDLE_LIBFUNC(log1pl)
HANDLE_SEP
      /// double log2(double x);
HANDLE_LIBFUNC(log2)
HANDLE_SEP
      /// float log2f(float x);
HANDLE_LIBFUNC(log2f)
HANDLE_SEP
      /// double long double log2l(long double x);
HANDLE_LIBFUNC(log2l)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// double logb(double x);
HANDLE_LIBFUNC(logb)
HANDLE_SEP
      /// float logbf(float x);
HANDLE_LIBFUNC(logbf)
HANDLE_SEP
      /// long double logbl(long double x);
HANDLE_LIBFUNC(logbl)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// float logf(float x);
HANDLE_LIBFUNC(logf)
HANDLE_SEP
      /// long double logl(long double x);
HANDLE_LIBFUNC(logl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int lstat(const char *path, struct stat *buf);
HANDLE_LIBFUNC(lstat)
HANDLE_SEP
      /// int lstat64(const char *path, struct stat64 *buf);
HANDLE_LIBFUNC(lstat64)
HANDLE_SEP
      /// void *malloc(size_t size);
HANDLE_LIBFUNC(malloc)
HANDLE_SEP
      /// void *memalign(size_t boundary, size_t size);
HANDLE_LIBFUNC(memalign)
HANDLE_SEP
      /// void *memccpy(void *s1, const void *s2, int c, size_t n);
HANDLE_LIBFUNC(memccpy)
HANDLE_SEP
      /// void *memchr(const void *s, int c, size_t n);
HANDLE_LIBFUNC(memchr)
HANDLE_SEP
      /// int memcmp(const void *s1, const void *s2, size_t n);
HANDLE_LIBFUNC(memcmp)
#endif
HANDLE_SEP
      /// void *memcpy(void *s1, const void *s2, size_t n);
HANDLE_LIBFUNC(memcpy)
HANDLE_SEP
      /// void *memmove(void *s1, const void *s2, size_t n);
HANDLE_LIBFUNC(memmove)
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      // void *memrchr(const void *s, int c, size_t n);
HANDLE_LIBFUNC(memrchr)
#endif
HANDLE_SEP
      /// void *memset(void *b, int c, size_t len);
HANDLE_LIBFUNC(memset)
HANDLE_SEP
      /// void memset_pattern16(void *b, const void *pattern16, size_t len);
HANDLE_LIBFUNC(memset_pattern16)
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int mkdir(const char *path, mode_t mode);
HANDLE_LIBFUNC(mkdir)
HANDLE_SEP
      /// time_t mktime(struct tm *timeptr);
HANDLE_LIBFUNC(mktime)
HANDLE_SEP
      /// double modf(double x, double *iptr);
HANDLE_LIBFUNC(modf)
HANDLE_SEP
      /// float modff(float, float *iptr);
HANDLE_LIBFUNC(modff)
HANDLE_SEP
      /// long double modfl(long double value, long double *iptr);
HANDLE_LIBFUNC(modfl)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double nearbyint(double x);
HANDLE_LIBFUNC(nearbyint)
HANDLE_SEP
      /// float nearbyintf(float x);
HANDLE_LIBFUNC(nearbyintf)
HANDLE_SEP
      /// long double nearbyintl(long double x);
HANDLE_LIBFUNC(nearbyintl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// uint32_t ntohl(uint32_t netlong);
HANDLE_LIBFUNC(ntohl)
HANDLE_SEP
      /// uint16_t ntohs(uint16_t netshort);
HANDLE_LIBFUNC(ntohs)
HANDLE_SEP
      /// int open(const char *path, int oflag, ... );
HANDLE_LIBFUNC(open)
HANDLE_SEP
      /// int open64(const char *filename, int flags[, mode_t mode])
HANDLE_LIBFUNC(open64)
HANDLE_SEP
      /// DIR *opendir(const char *dirname);
HANDLE_LIBFUNC(opendir)
HANDLE_SEP
      /// int pclose(FILE *stream);
HANDLE_LIBFUNC(pclose)
HANDLE_SEP
      /// void perror(const char *s);
HANDLE_LIBFUNC(perror)
HANDLE_SEP
      /// FILE *popen(const char *command, const char *mode);
HANDLE_LIBFUNC(popen)
HANDLE_SEP
      /// int posix_memalign(void **memptr, size_t alignment, size_t size);
HANDLE_LIBFUNC(posix_memalign)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double pow(double x, double y);
HANDLE_LIBFUNC(pow)
HANDLE_SEP
      /// float powf(float x, float y);
HANDLE_LIBFUNC(powf)
HANDLE_SEP
      /// long double powl(long double x, long double y);
HANDLE_LIBFUNC(powl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
HANDLE_LIBFUNC(pread)
HANDLE_SEP
      /// int printf(const char *format, ...);
HANDLE_LIBFUNC(printf)
HANDLE_SEP
      /// int putc(int c, FILE *stream);
HANDLE_LIBFUNC(putc)
HANDLE_SEP
      /// int putchar(int c);
HANDLE_LIBFUNC(putchar)
HANDLE_SEP
      /// int puts(const char *s);
HANDLE_LIBFUNC(puts)
HANDLE_SEP
      /// ssize_t pwrite(int fildes, const void *buf, size_t nbyte,
      ///                off_t offset);
HANDLE_LIBFUNC(pwrite)
HANDLE_SEP
      /// void qsort(void *base, size_t nel, size_t width,
      ///            int (*compar)(const void *, const void *));
HANDLE_LIBFUNC(qsort)
HANDLE_SEP
      /// ssize_t read(int fildes, void *buf, size_t nbyte);
HANDLE_LIBFUNC(read)
HANDLE_SEP
      /// ssize_t readlink(const char *path, char *buf, size_t bufsize);
HANDLE_LIBFUNC(readlink)
HANDLE_SEP
      /// void *realloc(void *ptr, size_t size);
HANDLE_LIBFUNC(realloc)
HANDLE_SEP
      /// void *reallocf(void *ptr, size_t size);
HANDLE_LIBFUNC(reallocf)
HANDLE_SEP
      /// char *realpath(const char *file_name, char *resolved_name);
HANDLE_LIBFUNC(realpath)
HANDLE_SEP
      /// int remove(const char *path);
HANDLE_LIBFUNC(remove)
HANDLE_SEP
      /// int rename(const char *old, const char *new);
HANDLE_LIBFUNC(rename)
HANDLE_SEP
      /// void rewind(FILE *stream);
HANDLE_LIBFUNC(rewind)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double rint(double x);
HANDLE_LIBFUNC(rint)
HANDLE_SEP
      /// float rintf(float x);
HANDLE_LIBFUNC(rintf)
HANDLE_SEP
      /// long double rintl(long double x);
HANDLE_LIBFUNC(rintl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int rmdir(const char *path);
HANDLE_LIBFUNC(rmdir)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double round(double x);
HANDLE_LIBFUNC(round)
HANDLE_SEP
      /// float roundf(float x);
HANDLE_LIBFUNC(roundf)
HANDLE_SEP
      /// long double roundl(long double x);
HANDLE_LIBFUNC(roundl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int scanf(const char *restrict format, ... );
HANDLE_LIBFUNC(scanf)
HANDLE_SEP
      /// void setbuf(FILE *stream, char *buf);
HANDLE_LIBFUNC(setbuf)
HANDLE_SEP
      /// int setitimer(int which, const struct itimerval *value,
      ///               struct itimerval *ovalue);
HANDLE_LIBFUNC(setitimer)
HANDLE_SEP
      /// int setvbuf(FILE *stream, char *buf, int type, size_t size);
HANDLE_LIBFUNC(setvbuf)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double sin(double x);
HANDLE_LIBFUNC(sin)
HANDLE_SEP
      /// float sinf(float x);
HANDLE_LIBFUNC(sinf)
HANDLE_SEP
      /// double sinh(double x);
HANDLE_LIBFUNC(sinh)
HANDLE_SEP
      /// float sinhf(float x);
HANDLE_LIBFUNC(sinhf)
HANDLE_SEP
      /// long double sinhl(long double x);
HANDLE_LIBFUNC(sinhl)
HANDLE_SEP
      /// long double sinl(long double x);
HANDLE_LIBFUNC(sinl)
#endif
HANDLE_SEP
      /// int siprintf(char *str, const char *format, ...);
HANDLE_LIBFUNC(siprintf)
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int snprintf(char *s, size_t n, const char *format, ...);
HANDLE_LIBFUNC(snprintf)
HANDLE_SEP
      /// int sprintf(char *str, const char *format, ...);
HANDLE_LIBFUNC(sprintf)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double sqrt(double x);
HANDLE_LIBFUNC(sqrt)
HANDLE_SEP
      /// float sqrtf(float x);
HANDLE_LIBFUNC(sqrtf)
HANDLE_SEP
      /// long double sqrtl(long double x);
HANDLE_LIBFUNC(sqrtl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int sscanf(const char *s, const char *format, ... );
HANDLE_LIBFUNC(sscanf)
HANDLE_SEP
      /// int stat(const char *path, struct stat *buf);
HANDLE_LIBFUNC(stat)
HANDLE_SEP
      /// int stat64(const char *path, struct stat64 *buf);
HANDLE_LIBFUNC(stat64)
HANDLE_SEP
      /// int statvfs(const char *path, struct statvfs *buf);
HANDLE_LIBFUNC(statvfs)
HANDLE_SEP
      /// int statvfs64(const char *path, struct statvfs64 *buf)
HANDLE_LIBFUNC(statvfs64)
HANDLE_SEP
      /// char *stpcpy(char *s1, const char *s2);
HANDLE_LIBFUNC(stpcpy)
HANDLE_SEP
      /// char *stpncpy(char *s1, const char *s2, size_t n);
HANDLE_LIBFUNC(stpncpy)
HANDLE_SEP
      /// int strcasecmp(const char *s1, const char *s2);
HANDLE_LIBFUNC(strcasecmp)
HANDLE_SEP
      /// char *strcat(char *s1, const char *s2);
HANDLE_LIBFUNC(strcat)
HANDLE_SEP
      /// char *strchr(const char *s, int c);
HANDLE_LIBFUNC(strchr)
HANDLE_SEP
      /// int strcmp(const char *s1, const char *s2);
HANDLE_LIBFUNC(strcmp)
HANDLE_SEP
      /// int strcoll(const char *s1, const char *s2);
HANDLE_LIBFUNC(strcoll)
HANDLE_SEP
      /// char *strcpy(char *s1, const char *s2);
HANDLE_LIBFUNC(strcpy)
HANDLE_SEP
      /// size_t strcspn(const char *s1, const char *s2);
HANDLE_LIBFUNC(strcspn)
HANDLE_SEP
      /// char *strdup(const char *s1);
HANDLE_LIBFUNC(strdup)
HANDLE_SEP
      /// size_t strlen(const char *s);
HANDLE_LIBFUNC(strlen)
HANDLE_SEP
      /// int strncasecmp(const char *s1, const char *s2, size_t n);
HANDLE_LIBFUNC(strncasecmp)
HANDLE_SEP
      /// char *strncat(char *s1, const char *s2, size_t n);
HANDLE_LIBFUNC(strncat)
HANDLE_SEP
      /// int strncmp(const char *s1, const char *s2, size_t n);
HANDLE_LIBFUNC(strncmp)
HANDLE_SEP
      /// char *strncpy(char *s1, const char *s2, size_t n);
HANDLE_LIBFUNC(strncpy)
HANDLE_SEP
      /// char *strndup(const char *s1, size_t n);
HANDLE_LIBFUNC(strndup)
HANDLE_SEP
      /// size_t strnlen(const char *s, size_t maxlen);
HANDLE_LIBFUNC(strnlen)
HANDLE_SEP
      /// char *strpbrk(const char *s1, const char *s2);
HANDLE_LIBFUNC(strpbrk)
HANDLE_SEP
      /// char *strrchr(const char *s, int c);
HANDLE_LIBFUNC(strrchr)
HANDLE_SEP
      /// size_t strspn(const char *s1, const char *s2);
HANDLE_LIBFUNC(strspn)
HANDLE_SEP
      /// char *strstr(const char *s1, const char *s2);
HANDLE_LIBFUNC(strstr)
HANDLE_SEP
      /// double strtod(const char *nptr, char **endptr);
HANDLE_LIBFUNC(strtod)
HANDLE_SEP
      /// float strtof(const char *nptr, char **endptr);
HANDLE_LIBFUNC(strtof)
HANDLE_SEP
      // char *strtok(char *s1, const char *s2);
HANDLE_LIBFUNC(strtok)
HANDLE_SEP
      // char *strtok_r(char *s, const char *sep, char **lasts);
HANDLE_LIBFUNC(strtok_r)
HANDLE_SEP
      /// long int strtol(const char *nptr, char **endptr, int base);
HANDLE_LIBFUNC(strtol)
HANDLE_SEP
      /// long double strtold(const char *nptr, char **endptr);
HANDLE_LIBFUNC(strtold)
HANDLE_SEP
      /// long long int strtoll(const char *nptr, char **endptr, int base);
HANDLE_LIBFUNC(strtoll)
HANDLE_SEP
      /// unsigned long int strtoul(const char *nptr, char **endptr, int base);
HANDLE_LIBFUNC(strtoul)
HANDLE_SEP
      /// unsigned long long int strtoull(const char *nptr, char **endptr,
      ///                                 int base);
HANDLE_LIBFUNC(strtoull)
HANDLE_SEP
      /// size_t strxfrm(char *s1, const char *s2, size_t n);
HANDLE_LIBFUNC(strxfrm)
HANDLE_SEP
      /// int system(const char *command);
HANDLE_LIBFUNC(system)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double tan(double x);
HANDLE_LIBFUNC(tan)
HANDLE_SEP
      /// float tanf(float x);
HANDLE_LIBFUNC(tanf)
HANDLE_SEP
      /// double tanh(double x);
HANDLE_LIBFUNC(tanh)
HANDLE_SEP
      /// float tanhf(float x);
HANDLE_LIBFUNC(tanhf)
HANDLE_SEP
      /// long double tanhl(long double x);
HANDLE_LIBFUNC(tanhl)
HANDLE_SEP
      /// long double tanl(long double x);
HANDLE_LIBFUNC(tanl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// clock_t times(struct tms *buffer);
HANDLE_LIBFUNC(times)
HANDLE_SEP
      /// FILE *tmpfile(void);
HANDLE_LIBFUNC(tmpfile)
HANDLE_SEP
      /// FILE *tmpfile64(void)
HANDLE_LIBFUNC(tmpfile64)
HANDLE_SEP
      /// int toascii(int c);
HANDLE_LIBFUNC(toascii)
#endif
#if HS_LLVM_VERSION >= 301
HANDLE_SEP
      /// double trunc(double x);
HANDLE_LIBFUNC(trunc)
HANDLE_SEP
      /// float truncf(float x);
HANDLE_LIBFUNC(truncf)
HANDLE_SEP
      /// long double truncl(long double x);
HANDLE_LIBFUNC(truncl)
#endif
#if HS_LLVM_VERSION >= 303
HANDLE_SEP
      /// int uname(struct utsname *name);
HANDLE_LIBFUNC(uname)
HANDLE_SEP
      /// int ungetc(int c, FILE *stream);
HANDLE_LIBFUNC(ungetc)
HANDLE_SEP
      /// int unlink(const char *path);
HANDLE_LIBFUNC(unlink)
HANDLE_SEP
      /// int unsetenv(const char *name);
HANDLE_LIBFUNC(unsetenv)
HANDLE_SEP
      /// int utime(const char *path, const struct utimbuf *times);
HANDLE_LIBFUNC(utime)
HANDLE_SEP
      /// int utimes(const char *path, const struct timeval times[2]);
HANDLE_LIBFUNC(utimes)
HANDLE_SEP
      /// void *valloc(size_t size);
HANDLE_LIBFUNC(valloc)
HANDLE_SEP
      /// int vfprintf(FILE *stream, const char *format, va_list ap);
HANDLE_LIBFUNC(vfprintf)
HANDLE_SEP
      /// int vfscanf(FILE *stream, const char *format, va_list arg);
HANDLE_LIBFUNC(vfscanf)
HANDLE_SEP
      /// int vprintf(const char *restrict format, va_list ap);
HANDLE_LIBFUNC(vprintf)
HANDLE_SEP
      /// int vscanf(const char *format, va_list arg);
HANDLE_LIBFUNC(vscanf)
HANDLE_SEP
      /// int vsnprintf(char *s, size_t n, const char *format, va_list ap);
HANDLE_LIBFUNC(vsnprintf)
HANDLE_SEP
      /// int vsprintf(char *s, const char *format, va_list ap);
HANDLE_LIBFUNC(vsprintf)
HANDLE_SEP
      /// int vsscanf(const char *s, const char *format, va_list arg);
HANDLE_LIBFUNC(vsscanf)
HANDLE_SEP
      /// ssize_t write(int fildes, const void *buf, size_t nbyte);
HANDLE_LIBFUNC(write)
#endif
#undef HANDLE_LIBFUNC
#undef HANDLE_SEP
